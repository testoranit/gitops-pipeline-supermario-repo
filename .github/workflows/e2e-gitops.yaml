name: "End-to-End GitOps Pipeline: SAST, Build, Scan, Deploy"

on:
  push:
    branches:
      - main
    paths-ignore:
      - version.txt

env:
  DOCKER_IMAGE: "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject"

jobs:
  run_sast_sonar_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push_supermario_image:
    runs-on: ubuntu-latest
    needs: run_sast_sonar_scan

    steps:
      - name: Checkout Repository with PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Read and increment version
        id: get_version
        run: |
          version=$(cat version.txt 2>/dev/null || echo "0")
          new_version=$((version + 1))
          echo "$new_version" > version.txt
          echo "VERSION=$new_version" >> $GITHUB_ENV
          
      - name: Commit and push updated version.txt
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version.txt
          git commit -m "Bump version to ${{ env.VERSION }}"
          git push origin main

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          if [ -z "${{ env.VERSION }}" ]; then
            echo "VERSION is empty. Exiting."
            exit 1
          fi
          docker build -t $DOCKER_IMAGE:${{ env.VERSION }} .
          docker push $DOCKER_IMAGE:${{ env.VERSION }}

  scan_container_image:
    runs-on: ubuntu-latest
    needs: build_push_supermario_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug Docker Image
        run: |
          echo "DOCKER_IMAGE: $DOCKER_IMAGE:${{ env.VERSION }}"

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull and Save Docker Image
        run: |
          if [ -z "${{ env.VERSION }}" ]; then
            echo "VERSION is empty. Exiting."
            exit 1
          fi
          docker pull $DOCKER_IMAGE:${{ env.VERSION }}
          docker save -o supermariolatestdockerimage.tar $DOCKER_IMAGE:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          input: ./supermariolatestdockerimage.tar
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  update_k8s_deployment:
    runs-on: ubuntu-latest
    needs: scan_container_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Update Deployment YAML and version
        run: |
          git pull

          # Ensure version.txt is not empty
          if [ ! -s version.txt ]; then
            echo "1" > version.txt
          fi

          VERSION=$(cat version.txt)

          # Update deployment.yaml with the new image tag
          sed -i "s|image: .*/supermariogitopsproject:.*$|image: $DOCKER_IMAGE:$VERSION|" deployment.yaml

          echo "$VERSION" > version.txt

          git add deployment.yaml version.txt
          git commit -m "Updated deployment with image tag $VERSION"
          git push
