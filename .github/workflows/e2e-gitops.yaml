name: "End-to-End GitOps Pipeline: SAST, Build, Scan, Deploy"

on:
  push:
    branches:
      - main
    paths-ignore:
      - version.txt
      - deployment.yaml

env:
  DOCKER_IMAGE: "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject"

jobs:
  run_sast_sonar_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push_supermario_image:
    runs-on: ubuntu-latest
    needs: run_sast_sonar_scan
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Read and Increment Version
        id: get_version
        run: |
          version=$(cat version.txt 2>/dev/null || echo "0")
          new_version=$((version + 1))
          echo "$new_version" > version.txt
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Commit and Push version.txt
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add version.txt
          git commit -m "Bump version to $(cat version.txt)"
          git push origin main

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          docker build -t $DOCKER_IMAGE:$VERSION .
          docker push $DOCKER_IMAGE:$VERSION

  scan_container_image:
    runs-on: ubuntu-latest
    needs: build_push_supermario_image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull and Save Docker Image
        run: |
          VERSION=${{ needs.build_push_supermario_image.outputs.version }}
          docker pull $DOCKER_IMAGE:$VERSION
          docker save -o supermariolatestdockerimage.tar $DOCKER_IMAGE:$VERSION

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          input: ./supermariolatestdockerimage.tar
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  update_k8s_deployment:
    runs-on: ubuntu-latest
    needs: scan_container_image
    steps:
      - name: Checkout Repository with PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"

      - name: Install yq (Go version by mikefarah)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Update Deployment Image in deployment.yaml
        run: |
          VERSION=${{ needs.build_push_supermario_image.outputs.version }}
          IMAGE_TAG="${DOCKER_IMAGE}:${VERSION}"

          DEPLOY_FILE=deployment.yaml

          DEPLOYMENT=$(yq 'select(.kind == "Deployment")' $DEPLOY_FILE)
          SERVICE=$(yq 'select(.kind == "Service")' $DEPLOY_FILE)

          UPDATED_DEPLOYMENT=$(echo "$DEPLOYMENT" | yq '.spec.template.spec.containers[] |= (select(.image | test("supermariogitopsproject")) | .image = strenv(IMAGE_TAG))')

          echo "$UPDATED_DEPLOYMENT" > $DEPLOY_FILE
          echo "---" >> $DEPLOY_FILE
          echo "$SERVICE" >> $DEPLOY_FILE

      - name: Commit and Push Updated Deployment
        run: |
          git pull --rebase origin main
          if git diff --quiet deployment.yaml; then
            echo "No changes detected in deployment.yaml."
          else
            git add deployment.yaml
            git commit -m "Update deployment.yaml with new image tag"
            git push origin main
